{"version":3,"sources":["components/preloader/preloader.js","components/login/login.js","App.js","reportWebVitals.js","index.js"],"names":["Preloader","useState","loading","setLoading","useEffect","setTimeout","className","isClickToPauseDisabled","options","animationData","require","height","width","Login","type","id","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0z6DA2BeA,MAvBf,WACI,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAOA,OANAC,qBAAW,WACPD,GAAW,GACXE,YAAW,WACXF,GAAW,KACR,OACJ,IAEC,qBAAKG,UAAU,YAAf,SACCJ,GACG,cAAC,IAAD,CACAK,wBAAwB,EACxBC,QAAS,CACLC,cAAeC,EAAQ,MAE3BC,OAAQ,IACRC,MAAO,SCHJC,G,OAfD,WACV,OACI,qBAAKP,UAAU,QAAf,SACI,sBAAKA,UAAU,kBAAf,UACA,uCACA,oDACA,uBAAOQ,KAAK,OAAOC,GAAG,YAAYC,YAAY,sBAC9C,uBAAOF,KAAK,WAAWE,YAAY,wBACnC,qBAAKV,UAAU,eAAf,mBACA,qCACA,qBAAKA,UAAU,gBAAf,2BCSGW,MAjBf,WACE,MAA8BhB,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAOA,OANEC,qBAAW,WACPD,GAAW,GACXE,YAAW,WACXF,GAAW,KACR,OACJ,IAEH,qBAAKG,UAAU,MAAf,SAEIJ,EAAU,cAAC,EAAD,IAAgB,cAAC,EAAD,OCJnBgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.37a634c6.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './preloader.css';\r\nimport Lottie from 'react-lottie';\r\n\r\nfunction Preloader(){\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect (() => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n        setLoading(false);\r\n        }, 5000);\r\n    }, []);\r\n    return (\r\n        <div className=\"preloader\">\r\n        {loading && (\r\n            <Lottie\r\n            isClickToPauseDisabled={true}\r\n            options={{\r\n                animationData: require('../lottie/preloader.json'),\r\n            }}\r\n            height={300}\r\n            width={300}\r\n            />\r\n        )}\r\n        </div>\r\n    );\r\n}\r\nexport default Preloader;","import React from \"react\";\r\nimport './login.css';\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login-container\">\r\n            <h1>Login</h1>\r\n            <p>Welcome Back!&#9889;</p>\r\n            <input type=\"text\" id=\"emailText\" placeholder=\"Enter Your E-mail\"></input>\r\n            <input type=\"password\" placeholder=\"Enter Your Password\"></input>\r\n            <div className=\"login-button\">Login</div>            \r\n            <div>or</div>\r\n            <div className=\"signup-button\">Signup</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Login;","import './App.css';\nimport React, {useState, useEffect} from 'react';\nimport Preloader from './components/preloader/preloader';\nimport Login from './components/login/login';\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n    useEffect (() => {\n        setLoading(true);\n        setTimeout(() => {\n        setLoading(false);\n        }, 5000);\n    }, []);\n  return (\n    <div className=\"App\">\n      { \n        loading ? <Preloader /> : <Login />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}